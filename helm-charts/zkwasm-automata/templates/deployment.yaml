apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zkwasm-automata.fullname" . }}-rpc
  labels:
    {{- include "zkwasm-automata.labels" . | nindent 4 }}
    app.kubernetes.io/component: rpc
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "zkwasm-automata.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: rpc
  template:
    metadata:
      labels:
        {{- include "zkwasm-automata.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: rpc
    spec:
      # 添加 Pod 级别的 securityContext
      securityContext:
        fsGroup: 1000
      containers:
      - name: app
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        command: ["node"]
        args: ["--experimental-modules", "--es-module-specifier-resolution=node", "ts/src/service.js"]
        # 添加 securityContext 以确保容器有足够的权限
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
        # 添加 lifecycle hook 来创建必要的目录
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "mkdir -p /app/uploads"]
        env:
        - name: URI
          value: mongodb://{{ include "zkwasm-automata.fullname" . }}-mongodb:{{ .Values.config.mongodb.port }}
        - name: REDISHOST
          value: {{ include "zkwasm-automata.fullname" . }}-redis
        - name: REDIS_PORT
          value: "{{ .Values.config.redis.port }}"
        - name: MERKLE_SERVER
          value: http://{{ include "zkwasm-automata.fullname" . }}-merkle:{{ .Values.config.merkle.port }}
        - name: DEPLOY
          value: "{{ .Values.config.app.deploy | default "" }}"
        - name: REMOTE
          value: "{{ .Values.config.app.remote | default "" }}"
        - name: AUTO_SUBMIT
          value: "{{ .Values.config.app.autoSubmit | default "" }}"
        - name: MIGRATE
          value: "{{ .Values.config.app.migrate | default "" }}"
        - name: IMAGE
          value: "{{ .Values.config.app.image | default "" }}"
        - name: MIGRATE_IMAGE_VALUE
          value: "{{ .Values.config.app.migrateImageValue | default "" }}"
        - name: SETTLEMENT_CONTRACT_ADDRESS
          value: "{{ .Values.config.app.settlementContractAddress | default "" }}"
        - name: RPC_PROVIDER
          value: "{{ .Values.config.app.rpcProvider | default "" }}"
        # 明确指定组件类型
        - name: COMPONENT_TYPE
          value: "rpc"
        {{- if .Values.config.app.customEnv }}
        {{- range $key, $value := .Values.config.app.customEnv }}
        - name: {{ $key }}
          value: "{{ $value }}"
        {{- end }}
        {{- end }}
        ports:
        - containerPort: 3000
          name: http
        volumeMounts:
        - name: app-data
          mountPath: /app/uploads
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        # 完全移除存活探针 - 在初期阶段避免因探针导致的重启
        # livenessProbe 配置被删除
      
        readinessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 60  # 给予服务足够的启动时间
          periodSeconds: 30        # 降低检查频率
          timeoutSeconds: 15       # 延长超时时间
          successThreshold: 1
          failureThreshold: 5      # 增加失败阈值，增加容忍度
        
        startupProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 30     # 允许服务有5分钟(30*10s)的启动时间
      volumes:
      - name: app-data
        emptyDir: {}
